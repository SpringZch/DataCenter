//
// Generated file, do not edit! Created by opp_msgc 4.3 from model/packets/DCN_IPPacket.msg.
//

#ifndef _DCN_IPPACKET_M_H_
#define _DCN_IPPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "DCN_EthPacket.h"
// }}



/**
 * Class generated from <tt>model/packets/DCN_IPPacket.msg</tt> by opp_msgc.
 * <pre>
 * packet DCN_IPPacket extends DCN_EthPacket
 * {
 *     @customize(true);
 * 	kind enum(DCN_EthPacketType) = DCN_IP_PACKET;  
 *     unsigned short transportProtocol enum(IPProtocolId) = IP_PROT_NONE;
 * }
 * </pre>
 *
 * DCN_IPPacket_Base is only useful if it gets subclassed, and DCN_IPPacket is derived from it.
 * The minimum code to be written for DCN_IPPacket is the following:
 *
 * <pre>
 * class DCN_IPPacket : public DCN_IPPacket_Base
 * {
 *   private:
 *     void copy(const DCN_IPPacket& other) { ... }

 *   public:
 *     DCN_IPPacket(const char *name=NULL, int kind=0) : DCN_IPPacket_Base(name,kind) {}
 *     DCN_IPPacket(const DCN_IPPacket& other) : DCN_IPPacket_Base(other) {copy(other);}
 *     DCN_IPPacket& operator=(const DCN_IPPacket& other) {if (this==&other) return *this; DCN_IPPacket_Base::operator=(other); copy(other); return *this;}
 *     virtual DCN_IPPacket *dup() const {return new DCN_IPPacket(*this);}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from DCN_IPPacket_Base
 * };
 * </pre>
 *
 * The following should go into a .cc (.cpp) file:
 *
 * <pre>
 * Register_Class(DCN_IPPacket);
 * </pre>
 */
class DCN_IPPacket_Base : public ::DCN_EthPacket
{
  protected:
    unsigned short transportProtocol_var;

  private:
    void copy(const DCN_IPPacket_Base& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DCN_IPPacket_Base&);
    // make constructors protected to avoid instantiation
    DCN_IPPacket_Base(const char *name=NULL, int kind=0);
    DCN_IPPacket_Base(const DCN_IPPacket_Base& other);
    // make assignment operator protected to force the user override it
    DCN_IPPacket_Base& operator=(const DCN_IPPacket_Base& other);

  public:
    virtual ~DCN_IPPacket_Base();
    virtual DCN_IPPacket_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class DCN_IPPacket");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned short getTransportProtocol() const;
    virtual void setTransportProtocol(unsigned short transportProtocol);
};


#endif // _DCN_IPPACKET_M_H_
